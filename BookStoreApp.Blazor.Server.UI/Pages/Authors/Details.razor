@page "/authors/details/{id:int}"
@inject IAuthorService authorService
@inject NavigationManager navManager

<h3>Author Details</h3>
<EditForm Model="Author">
    <fieldset disabled="true">
        <div class="form-group">
            <label for="firstname">First Name</label>
            <InputText @bind-Value="Author.FirstName" class="form-control" id="firstname" />
            <ValidationMessage For="@(() => Author.FirstName)" />
        </div>
        <br />
        <div class="form-group">
            <label for="lastname">Last Name</label>
            <InputText @bind-Value="Author.LastName" class="form-control" id="lastname" />
            <ValidationMessage For="@(() => Author.LastName)" />
        </div>
        <br />
        <div class="form-group">
            <label for="bio">Biography</label>
            <InputText @bind-Value="Author.Bio" class="form-control" id="bio" />
            <ValidationMessage For="@(() => Author.Bio)" />
        </div>
        <br />

        <button @onclick="GoToEditAuthor" class="btn btn-outline-secondary">
            Edit Authour
        </button>
        
        <button @onclick="BackToList" class="btn btn-outline-secondary">
            Back To List
        </button>
    </fieldset>
</EditForm>

@code{

    [Parameter]
    public int Id { get; set; }
    private AuthorUpdateDto Author = new AuthorUpdateDto();
    protected override async Task OnInitializedAsync()
    {
        var response = await authorService.GetAuthorForUpdate(Id);
        if (response.Success)
        {
            Author = response.Data;
        }
    }

    private void BackToList()
    {
        navManager.NavigateTo("/authors/");
    }

    private void GoToEditAuthor()
    {
        navManager.NavigateTo($"/authors/update/{Author.Id}");
    }
}